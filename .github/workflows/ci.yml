name: CI

on:
  pull_request:
  push:
    branches: [ main, master ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm install
      - run: npm run test:coverage
      - name: Generate coverage summary
        id: cov
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const s = require('./coverage/coverage-summary.json');
          const pct = (x) => x.toFixed(2);
          const t = s.total;
          const lines = [
            '| Metric | % |',
            '|---|---:|',
            `| Statements | ${pct(t.statements.pct)} |`,
            `| Branches | ${pct(t.branches.pct)} |`,
            `| Functions | ${pct(t.functions.pct)} |`,
            `| Lines | ${pct(t.lines.pct)} |`,
          ];
          fs.writeFileSync('coverage_summary.md', lines.join('\n'));

          // Per-file table for .js files only (excluding tests and node_modules)
          const rows = [['File','Stmts','Branch','Funcs','Lines']];
          const files = Object.entries(s)
            .filter(([k]) => k !== 'total')
            .filter(([k]) => /\.js$/.test(k) && !k.includes('tests/') && !k.includes('node_modules'))
            .map(([k,v]) => ({
              file: k.replace(/^.*?\/?workspace\/?/, ''),
              s: v.statements.pct,
              b: v.branches.pct,
              f: v.functions.pct,
              l: v.lines.pct,
            }))
            .sort((a,b) => a.s - b.s);
          const table = [
            '| File | Stmts | Branch | Funcs | Lines |',
            '|---|---:|---:|---:|---:|',
            ...files.map(r => `| ${r.file} | ${pct(r.s)} | ${pct(r.b)} | ${pct(r.f)} | ${pct(r.l)} |`)
          ].join('\n');
          fs.writeFileSync('coverage_files.md', table);
          NODE
          printf "**Coverage Summary** for \`%s\`\n\n" "${GITHUB_SHA:0:7}" > pr_coverage_comment.md
          cat coverage_summary.md >> pr_coverage_comment.md
          printf "\n\n**Per-file coverage**\n\n" >> pr_coverage_comment.md
          cat coverage_files.md >> pr_coverage_comment.md
      - name: Find existing coverage comment
        id: fc
        uses: peter-evans/find-comment@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Coverage Summary'
      - name: Create or update coverage comment
        uses: peter-evans/create-or-update-comment@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: pr_coverage_comment.md
          edit-mode: replace

